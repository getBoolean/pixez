name: Sync Upstream

on:
  schedule:
    - cron: "0 0 * * *" # This runs the action every day at midnight (UTC)
  workflow_dispatch:

jobs:
  sync_upstream:
    name: Sync Upstream
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git committer identity
        run: |
          git config --global user.name "Sync Upstream Action"
          git config --global user.email \<\>
          git config --global push.autoSetupRemote true
          git checkout main
          git pull

      - name: Check if sync_upstream branch exists
        id: check_branch
        run: |
          if git show-ref --quiet refs/heads/sync_upstream; then
            echo "sync_upstream branch exists"
          else
            echo "sync_upstream branch does not exist"
            git branch sync_upstream
            git push
          fi
          git pull
        continue-on-error: true
        shell: bash

      - name: Merge upstream/master into sync_upstream
        uses: exions/merge-upstream@v1
        with:
          upstream: ${{ github.event.inputs.upstream }}
          upstream-branch: ${{ github.event.inputs.upstream-branch }}
          branch: sync_upstream
          #useremail: \<\>
          #username: Sync Pull Request Action
          token: ${{ secrets.PAT }}

      # - name: Check for changes between branches
      #   id: check_changes
      #   run: |
      #     changes=$(git diff main sync_upstream)
      #     if [ -z "$changes" ]; then
      #       echo "No new changes found. Exiting..."
      #       exit 1
      #     fi
      #   shell: bash

      - name: Push changes to the new branch
        run: |
          git push

      - name: Check existing pull requests
        id: check_pr
        run: |
          pr=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls?head=getBoolean:sync_upstream" | jq -r '.[0].state')
          echo "pull_request_state=$pr" >> $GITHUB_ENV
          echo "pull_request_state=$pr"
        shell: bash

      - name: Checkout main
        run: |
          git checkout main

      - name: Reset sync_upstream branch
        run: |
          git fetch origin sync_upstream:sync_upstream --depth=1
          git reset --hard sync_upstream

      - name: Create pull request if not exists or closed
        if: env.pull_request_state == 'closed' || env.pull_request_state == 'null'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          commit-message: "Merge changes from upstream"
          title: "Sync Upstream"
          body: "This pull request was automatically generated by a daily GitHub Action to merge changes from upstream."
          branch: sync_upstream
          base: main
