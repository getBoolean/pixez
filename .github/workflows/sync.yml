name: Sync Pull Request

on:
  schedule:
    - cron: "0 0 * * *" # This runs the action every day at midnight (UTC)
  workflow_dispatch:

jobs:
  sync_pull_request:
    name: Sync Pull Request
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git committer identity
        run: |
          git config --global user.name "Sync Pull Request Action"
          git config --global user.email \<\>
          git checkout main
          git pull

      - name: Check if sync_pull_request branch exists
        id: check_branch
        run: |
          if git show-ref --quiet refs/heads/sync_pull_request; then
            echo "sync_pull_request branch exists"
            exit 0
          else
            echo "sync_pull_request branch does not exist"
            exit 1
          fi
        continue-on-error: true
        shell: bash

      - name: Delete sync_pull_request branch if it exists
        if: steps.check_branch.run == 0 # Only runs if the check_branch step succeeded
        run: |
          git branch -D sync_pull_request

      - name: Create a new branch and pull changes from upstream
        run: |
          git fetch upstream
          git checkout -b sync_pull_request main
          git merge upstream/master

      - name: Check for changes between branches
        id: check_changes
        run: |
          changes=$(git diff main sync_pull_request)
          if [ -z "$changes" ]; then
            echo "No new changes found. Exiting..."
            exit 1
          fi
        shell: bash

      - name: Push changes to the new branch
        run: |
          git push origin sync_pull_request

      - name: Check existing pull requests
        id: check_pr
        run: |
          pr=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls?head=getBoolean:sync_pull_request" | jq -r '.[0].state')
          echo "::set-output name=pull_request_state::$pr"
        shell: bash

      - name: Create pull request if not exists or closed
        if: steps.check_pr.outputs.pull_request_state == 'closed' || steps.check_pr.outputs.pull_request_state == 'null'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Merge changes from upstream"
          title: "Sync Pull Request - YYYY-MM-DD" # Replace with a custom title
          body: "This pull request was automatically generated by a daily GitHub Action to merge changes from upstream."
          branch: "sync_pull_request"
          base: "main"
